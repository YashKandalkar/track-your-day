{"version":3,"sources":["components/Login/Login.js","components/Register/Register.js","pages/LoginScreen/LoginScreen.js","utils/taskColors.js","components/ColorPicker/ColorPicker.js","components/MuiDialog/MuiDialog.js","components/Task/Task.js","components/CardList/CardList.js","components/NewTask/NewTask.js","pages/Home/Home.js","pages/Analyze/Analyze.js","components/OldTask/OldTask.js","pages/History/History.js","components/ResponsiveDrawer/ResponsiveDrawer.js","App.js","serviceWorker.js","index.js"],"names":["emailformat","useStyles","makeStyles","theme","container","height","display","alignItems","box","padding","spacing","paddingTop","borderRadius","minHeight","justifyContent","alignContent","title","paddingBottom","button","rememberMe","marginBottom","textAlign","Login","onRegisterClick","setLogin","openAlert","setUserData","BASE_URL","classes","useRef","emailRef","passwordRef","useState","emailHelperText","setEmailHelperText","passHelperText","setPassHelperText","remember","setRemember","onLoginClick","email","current","value","password","match","length","fetch","method","headers","body","JSON","stringify","then","response","status","json","console","log","data","localStorage","setItem","name","id","joined","catch","err","Container","className","maxWidth","Grid","style","background","Typography","color","fontSize","item","xs","TextField","fullWidth","required","label","size","variant","inputRef","helperText","error","onChange","type","onKeyDown","event","which","keyCode","Checkbox","target","checked","defaultChecked","justify","Button","onClick","Register","nameRef","nameHelperText","setNameHelperText","main","topbar","palette","primary","marginLeft","LoginScreen","view","setView","Toolbar","taskColors","popover","width","border","colorItem","margin","transition","borderColor","ColorPicker","onColorClick","iconColor","currColor","popoverEl","setPopEl","colorTooltipOpen","setCTOpen","popOpen","Boolean","popId","undefined","handleCTClose","handleColorClose","Tooltip","arrow","open","onOpen","onClose","IconButton","aria-label","currentTarget","stopPropagation","Popper","anchorEl","zIndex","ClickAwayListener","onClickAway","map","el","i","key","MuiDialog","content","btn1","btn2","handleDialogClose","onMainButtonClick","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","root","boxShadow","boxSizing","selectButton","position","top","left","card","outline","props","isSelected","fontWeight","userSelect","cardIcon","menu","backgroundColor","whiteSpace","maxHeight","overflowY","deletebutton","formatDate","date","d","toDateString","slice","Task","created","edited","deleteTask","setEdit","setPrevData","handleBackdropToggle","editTask","onSelectClick","selectedCount","markComplete","setAnchorEl","setDialogOpen","showSelect","setShowSelect","selected","setSelected","mounted","setMount","isHolding","timer","hold","setHold","useEffect","toggleSelected","handleMenuClose","onHold","onMouseDown","setTimeout","Date","onMouseUp","clearTimeout","onMouseEnter","onMouseLeave","disableRipple","Card","onTouchStart","onTouchEnd","onTouchCancel","CardHeader","action","subheader","Menu","keepMounted","MenuItem","task_id","CardContent","component","CardActions","colorCode","appBar","toolbar","mixins","paper","text","secondary","tasksTitle","marginTop","dark","noTasksNotice","MasonryComponent","Object","keys","taskArray","items","values","reverse","columnGutter","columnWidth","render","last_edited","selectedTasks","role","tabIndex","CardList","showLoading","updateMultiple","selectAll","setSelectAll","appBarOpen","setAppBar","hideAppBar","AppBar","newObj","forEach","gutterBottom","val","newArr","CircularProgress","colorSelected","minWidth","floatingLabelFocusStyle","titleInput","titleError","bodyError","marginRight","NewTask","createTask","edit","prevData","titleRef","bodyRef","setTitleError","setBodyError","setColor","t","InputBase","placeholder","e","multiline","toLocaleTimeString","hour","minute","hour12","createMuiTheme","responsiveFontSizes","tasksNotice","addTaskButton","bottom","right","breakpoints","up","backdrop","drawer","Home","userData","backdropOpen","setBackdropOpen","setTaskArray","taskNotice","setTaskNotice","taskCount","setTaskCount","setMounted","setLoading","tasks","newArray","blockNotice","ThemeProvider","task_ids","newCount","newValues","Fab","Backdrop","heading","typography","pxToRem","chartContainer","overflow","chart","info","list","Analyze","dataLoaded","setDataLoaded","setData","chartData","React","useMemo","abandoned","completed","axes","orderAsc","newSortedTasks","aban","comp","newChartData","niceDate","push","task","tooltip","whiteIcon","OldTask","taskId","accordionTitle","flexDirection","fontStyle","accordionContainer","accordion","accordionSummary","taskContainer","gridTemplateColumns","gap","gridGap","helpIcon","pointerEvents","abandonedColor","completedColor","MuiAccordion","children","handleChange","expanded","Accordion","square","AccordionSummary","expandIcon","aria-controls","AccordionDetails","History","sortedTasks","setSortedTasks","setExpanded","loaded","setLoaded","handlePopoverClose","isExpanded","newSortedArr","filter","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disableRestoreFocus","ind","flexShrink","menuButton","drawerPaper","borderTopRightRadius","borderBottomRightRadius","flexGrow","icon","copyright","link","cursor","textDecoration","ResponsiveDrawer","snackbarTimeout","window","path","onLogout","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","ListItem","Link","to","ListItemIcon","ListItemText","document","CssBaseline","edge","noWrap","Drawer","anchor","direction","ModalProps","href","rel","initialState","snackbar","down","GrowTransition","Grow","Alert","elevation","App","loggedIn","setOpen","alertMsg","setAlertMsg","alertSeverity","setAlertSeverity","checkedRemember","setCheckedRemember","getItem","msg","severity","alertClose","reason","basename","exact","Snackbar","autoHideDuration","TransitionComponent","isLocalhost","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","StrictMode","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a6abe623.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n//eslint-disable-next-line\r\nconst emailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: '90%',\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  box: {\r\n    padding: theme.spacing(3),\r\n    paddingTop: 0,\r\n    borderRadius: 3,\r\n    minHeight: '55%',\r\n    justifyContent: \"center\",\r\n    alignContent: 'space-around'\r\n  },\r\n  title: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n  button: {\r\n    padding: theme.spacing(2),\r\n    paddingBottom: 0\r\n  },\r\n  rememberMe: {\r\n      marginBottom: '-0.735rem',\r\n      textAlign: 'center'\r\n  }\r\n}));\r\n\r\nconst Login = ({ onRegisterClick, setLogin, openAlert, setUserData, BASE_URL }) => {\r\n    const classes = useStyles();\r\n    const [emailRef, passwordRef] = [useRef(), useRef()];\r\n    const [emailHelperText, setEmailHelperText] = useState(\"\");\r\n    const [passHelperText, setPassHelperText] = useState(\"\");\r\n    const [remember, setRemember] = useState(true);\r\n    \r\n    const onLoginClick = () => {\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n\r\n        if(email === \"\"){\r\n            setEmailHelperText(\"Email cannot be empty!\");\r\n        } \r\n        else if(!email.match(emailformat)){\r\n            setEmailHelperText(\"Please provide a valid email address!\");\r\n        }\r\n        else if(password === \"\"){\r\n            setPassHelperText(\"Password cannot be empty!\");\r\n        }\r\n        else if(password.length < 8){\r\n            setPassHelperText(\"Password should atleast be 8 characters long!\")\r\n        }\r\n        else{\r\n            fetch(`${BASE_URL}/loginUser`, {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    email,\r\n                    password\r\n                }) \r\n            })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    return response.json();\r\n                } else {\r\n                    console.log(\"something went wrong!\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                if(data){\r\n                    setUserData({...data});\r\n                    setLogin(true);\r\n                    openAlert(\"Logged in successfully!\", \"success\");\r\n                    if(remember){\r\n                        localStorage.setItem('remember', 'true');\r\n                        localStorage.setItem('name', data.name);\r\n                        localStorage.setItem('id', `${data.id}`);\r\n                        localStorage.setItem('joined', data.joined);\r\n                    } else {\r\n                        localStorage.setItem('remember', 'false');\r\n                    }\r\n                }\r\n                else{\r\n                    openAlert(\"Invalid email or password!\", \"error\");\r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err)\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            });\r\n        }\r\n    }\r\n\r\n    const onEmailChange = () => {\r\n        if(emailRef.current.value){\r\n            setEmailHelperText(\"\")\r\n        }\r\n    }\r\n\r\n    const onPasswordChange = () => {\r\n        if(passwordRef.current.value){\r\n            setPassHelperText(\"\")\r\n        }\r\n    }\r\n\r\n    const onKeyDown = (event) => {\r\n        const key = event.which || event.keyCode;\r\n        if(key === 13){\r\n            onLoginClick();\r\n        }\r\n    }\r\n\r\n    //keep signed in checkbox\r\n    const handleChange = (event) => {\r\n        setRemember(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.container} maxWidth=\"xs\">\r\n            <Grid container className={classes.box} style={{background: '#eee'}}>\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"secondary\" \r\n                    style={{fontSize: '2.5rem', textAlign: 'center'}}\r\n                >\r\n                        Sign In\r\n                </Typography>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                required\r\n                                label=\"Email\" \r\n                                name=\"email\" \r\n                                size=\"small\" \r\n                                variant=\"outlined\"\r\n                                inputRef={emailRef}\r\n                                helperText={emailHelperText}\r\n                                error={emailHelperText?true:false}\r\n                                onChange={onEmailChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                inputRef={passwordRef}\r\n                                helperText={passHelperText}\r\n                                error={passHelperText?true:false}\r\n                                onChange={onPasswordChange}\r\n                                onKeyDown={onKeyDown}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.rememberMe}>\r\n                    Keep me signed in \r\n                    <Checkbox \r\n                        onChange={handleChange}\r\n                        defaultChecked\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item className={classes.button}>\r\n                            <Button \r\n                                variant=\"outlined\" \r\n                                color=\"primary\"\r\n                                onClick={onRegisterClick}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <Button \r\n                                color=\"secondary\"  \r\n                                type=\"submit\" \r\n                                variant=\"contained\"\r\n                                onClick={onLoginClick}\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                        </Grid>  \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Login;","import React, { useState, useRef } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n//eslint-disable-next-line\r\nconst emailformat = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '90%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    box: {\r\n        padding: theme.spacing(3),\r\n        paddingTop: 0,\r\n        borderRadius: 3,\r\n        minHeight: '55%',\r\n        justifyContent: \"center\",\r\n        alignContent: 'space-around'\r\n    },\r\n    title: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    button: {\r\n        padding: theme.spacing(2),\r\n        paddingBottom: 0\r\n    },\r\n    rememberMe: {\r\n        marginBottom: '-0.735rem',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nconst Register = ({ onLoginClick, setLogin, openAlert, setUserData, BASE_URL }) => {\r\n    const classes = useStyles();\r\n    const [emailRef, passwordRef, nameRef] = [useRef(), useRef(), useRef()];\r\n    const [emailHelperText, setEmailHelperText] = useState(\"\");\r\n    const [passHelperText, setPassHelperText] = useState(\"\");\r\n    const [nameHelperText, setNameHelperText] = useState(\"\");\r\n    const [remember, setRemember] = useState(true);\r\n\r\n    const onRegisterClick = () => {\r\n        const email = emailRef.current.value;\r\n        const password = passwordRef.current.value;\r\n        const name = nameRef.current.value;\r\n        \r\n        if(name === \"\"){\r\n            setNameHelperText(\"Name cannot be empty!\")\r\n        }\r\n        else if(email === \"\"){\r\n            setEmailHelperText(\"Email cannot be empty!\");\r\n        } \r\n        else if(!email.match(emailformat)){\r\n            setEmailHelperText(\"Please provide a valid email address!\");\r\n        } \r\n        else if(password === \"\"){\r\n            setPassHelperText(\"Password cannot be empty!\");\r\n        }\r\n        else if(password.length < 8){\r\n            setPassHelperText(\"Password should atleast be 8 characters long!\")\r\n        }\r\n        else{\r\n            fetch(`${BASE_URL}/registerUser`, {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password\r\n                }) \r\n            })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    return response.json();\r\n                } else {\r\n                    console.log(\"something went wrong!\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                if(data){\r\n                    setUserData({...data})\r\n                    setLogin(true);\r\n                    openAlert(\"Registered successfully!\", \"success\");\r\n                    if(remember){\r\n                        localStorage.setItem('remember', 'true');\r\n                        localStorage.setItem('name', data.name);\r\n                        localStorage.setItem('id', `${data.id}`);\r\n                        localStorage.setItem('joined', data.joined);\r\n                    } else {\r\n                        localStorage.setItem('remember', 'false');\r\n                    }\r\n                }\r\n                else{\r\n                    openAlert(\"Cannot register user!\", \"error\")\r\n                }\r\n            })\r\n            .catch(()=>{\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    const onEmailChange = () => {\r\n        if(emailRef.current.value){\r\n            setEmailHelperText(\"\")\r\n        }\r\n    }\r\n\r\n    const onPasswordChange = () => {\r\n        if(passwordRef.current.value){\r\n            setPassHelperText(\"\")\r\n        }\r\n    }\r\n\r\n    const onNameChange = () => {\r\n        if(nameRef.current.value){\r\n            setNameHelperText(\"\")\r\n        }\r\n    }\r\n\r\n    //keep signed in checkbox\r\n    const handleChange = (event) => {\r\n        setRemember(event.target.checked);\r\n    }\r\n\r\n    return (\r\n        <Container className={classes.container} maxWidth=\"xs\">\r\n            <Grid container className={classes.box} style={{background: '#eee'}}>\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"secondary\" \r\n                    style={{fontSize: '2.5rem', textAlign: 'center'}}\r\n                >\r\n                        Register\r\n                </Typography>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                label=\"Username\" \r\n                                size=\"small\" \r\n                                variant=\"outlined\"\r\n                                inputRef={nameRef}\r\n                                onChange={onNameChange}\r\n                                helperText={nameHelperText}\r\n                                error={nameHelperText?true:false}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField \r\n                                fullWidth\r\n                                required\r\n                                label=\"Email\" \r\n                                name=\"email\" \r\n                                size=\"small\" \r\n                                variant=\"outlined\"\r\n                                inputRef={emailRef}\r\n                                helperText={emailHelperText}\r\n                                error={emailHelperText?true:false}\r\n                                onChange={onEmailChange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                label=\"Password\"\r\n                                name=\"password\"\r\n                                size=\"small\"\r\n                                type=\"password\"\r\n                                variant=\"outlined\"\r\n                                inputRef={passwordRef}\r\n                                helperText={passHelperText}\r\n                                error={passHelperText?true:false}\r\n                                onChange={onPasswordChange}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.rememberMe}>\r\n                    Keep me signed in \r\n                    <Checkbox \r\n                        onChange={handleChange}\r\n                        defaultChecked\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item className={classes.button}>\r\n                            <Button \r\n                                variant=\"outlined\" \r\n                                color=\"primary\"\r\n                                onClick={onLoginClick}\r\n                            >\r\n                                Log in\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item className={classes.button}>\r\n                            <Button \r\n                                color=\"secondary\"  \r\n                                type=\"submit\" \r\n                                variant=\"contained\" \r\n                                onClick={onRegisterClick}\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </Grid>  \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Register;","import React, { useState } from 'react';\r\nimport Login from \"../../components/Login/Login\";\r\nimport Register from \"../../components/Register/Register\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Toolbar } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        background: '#121212',\r\n        height: '100vh'\r\n    },\r\n    topbar: {\r\n        background: theme.palette.primary.main,\r\n        color: '#eee',\r\n    },\r\n    title: {\r\n        fontSize: '2rem',\r\n        color: '#eee',\r\n        marginLeft: '1rem'\r\n    }\r\n}));\r\n\r\nconst LoginScreen = ({ setLogin, openAlert, setUserData, BASE_URL }) => {\r\n    const [view, setView] = useState('login');\r\n    const classes = useStyles();\r\n\r\n    const onRegisterClick = () => {\r\n        setView('register');\r\n    }\r\n\r\n    const onLoginClick = () => {\r\n        setView('login');\r\n    }\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <Toolbar className={classes.topbar}>\r\n                <Typography variant=\"h6\">Track Your Day</Typography>\r\n            </Toolbar> \r\n            {\r\n                (view === 'login')?\r\n                    <Login \r\n                        onRegisterClick={onRegisterClick} \r\n                        setLogin={setLogin}\r\n                        openAlert={openAlert}\r\n                        setUserData={setUserData}\r\n                        BASE_URL={BASE_URL}\r\n                    />\r\n                    :\r\n                    <Register \r\n                        onLoginClick={onLoginClick} \r\n                        setLogin={setLogin}\r\n                        openAlert={openAlert}\r\n                        setUserData={setUserData}\r\n                        BASE_URL={BASE_URL}\r\n                    />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginScreen;","const taskColors = [\r\n    '#202124',\r\n    '#5c2b29',\r\n    '#614a19',\r\n    '#635d19',\r\n    '#345920',\r\n    '#16504b',\r\n    '#2d555e',\r\n    '#1e3a5f',\r\n    '#42275e',\r\n    '#5b2245',\r\n    '#442f19',\r\n    '#3c3f43'\r\n]\r\n\r\nexport default taskColors;","import React, { useState } from 'react';\r\nimport taskColors from '../../utils/taskColors';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ColorLensOutlinedIcon from '@material-ui/icons/ColorLensOutlined';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover: {\r\n        background: '#121212',\r\n        borderRadius: 5,\r\n        padding: theme.spacing(2),\r\n        width: 200,\r\n        border: '1px solid #484848'\r\n    },\r\n    colorItem: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '100%',\r\n        width: 28,\r\n        height: 28,\r\n        margin: theme.spacing(1),\r\n        transition: 'border 0.1s ease-in-out',\r\n        '&:hover': {\r\n            border: '2px solid transparent',\r\n            borderColor: 'rgba(255,255,255,0.87)!important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst ColorPicker = ({\r\n    onColorClick,\r\n    iconColor,\r\n    currColor,\r\n    style\r\n}) => {\r\n    const [popoverEl, setPopEl] = useState(null);\r\n    const [colorTooltipOpen, setCTOpen] = useState(false);\r\n    \r\n    const classes = useStyles();\r\n    \r\n    const popOpen = Boolean(popoverEl);\r\n    const popId = popOpen ? 'color-edit-popover' : undefined;\r\n\r\n    //color tooltip\r\n    const handleCTOpen = () => {\r\n        setCTOpen(true);\r\n    }\r\n\r\n    const handleCTClose = () => {\r\n        setCTOpen(false);\r\n    }\r\n\r\n    const handleColorClick = (event) => {\r\n        setPopEl(event.currentTarget);\r\n        event.stopPropagation();\r\n        handleCTClose();\r\n    };\r\n\r\n    const handleColorClose = () => {\r\n        setPopEl(null);\r\n    };\r\n\r\n    const onClick = (el) => {\r\n        handleColorClose();\r\n        onColorClick(el);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Tooltip \r\n                title=\"Change color\" \r\n                arrow \r\n                open={colorTooltipOpen}\r\n                onOpen={handleCTOpen}\r\n                onClose={handleCTClose}\r\n            >\r\n                <IconButton \r\n                    aria-label=\"change color\"\r\n                    onClick={handleColorClick}\r\n                    style={{...style}}\r\n                >\r\n                    <ColorLensOutlinedIcon style={{color: iconColor||'rgba(220,220,220,0.57)'}}/>\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Popper\r\n                id={popId}\r\n                className={classes.popover}\r\n                open={popOpen}\r\n                anchorEl={popoverEl}\r\n                onClose={handleColorClose}\r\n                style={{zIndex: 9999}}\r\n            >\r\n                <ClickAwayListener onClickAway={handleColorClose}>\r\n                    <Grid container spacing={3} justify=\"center\">\r\n                        {\r\n                            taskColors.map((el, i) => {\r\n                                return (\r\n                                    <IconButton \r\n                                        style={{padding:0}}\r\n                                        key={i}\r\n                                        onClick={() => onClick(el)}\r\n                                    >\r\n                                        <Grid \r\n                                            item \r\n                                            className={classes.colorItem}\r\n                                            style={{\r\n                                                background: el,\r\n                                                border: el==='#202124'?'2px solid #5f6368':''\r\n                                            }}\r\n                                        >\r\n                                            {\r\n                                                (Boolean(currColor))?\r\n                                                    (el===currColor)?\r\n                                                        <CheckIcon style={{color: '#9aa0a6'}}/>\r\n                                                    :''\r\n                                                :''\r\n                                            }\r\n                                        </Grid>\r\n                                    </IconButton>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </ClickAwayListener>\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ColorPicker;","import React from 'react';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst MuiDialog = ({\r\n    open,\r\n    title,\r\n    content,\r\n    btn1,\r\n    btn2,\r\n    handleDialogClose,\r\n    onMainButtonClick\r\n}) => {\r\n\r\n    return (\r\n        <span>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleDialogClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"title\">{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                            {content}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleDialogClose} color=\"default\">\r\n                        {btn1}\r\n                    </Button>\r\n                    <Button onClick={onMainButtonClick} color=\"primary\" autoFocus>\r\n                        {btn2}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </span>\r\n    )\r\n}\r\n\r\n\r\nexport default MuiDialog;","import React, { useState, useEffect } from 'react';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport MuiDialog from '../MuiDialog/MuiDialog';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > :hover': {\r\n            boxShadow:  '0px 1px 5px 0 rgba(0,0,0,0.6), 0 1px 5px 1px rgba(0,0,0,0.302)',\r\n            '& ::-webkit-scrollbar': {\r\n                display: 'initial !important'\r\n            },\r\n        },\r\n        margin: theme.spacing(1),\r\n        '&  ::-webkit-scrollbar': {\r\n            display: 'none !important'\r\n        },\r\n        boxSizing: 'border-box !important'\r\n    },\r\n    selectButton: {\r\n        position: 'absolute',\r\n        top: theme.spacing(-2.59),\r\n        left: theme.spacing(-2.5),\r\n        color: '#eee',\r\n        boxShadow: 'none !important'\r\n    },\r\n    card: {\r\n        color: '#e8eaed',\r\n        borderColor: '#5f6368',\r\n        outline: props => props.isSelected?'3px solid rgb(220, 220, 220)':'0px solid #000',\r\n        borderRadius: props => props.isSelected?'0':'3px',\r\n        transition: 'outline 0.1s ease-out',\r\n        fontWeight: 400,\r\n        boxSizing: 'border-box !important',\r\n        userSelect: 'none'\r\n    },\r\n    cardIcon: {\r\n        color: 'rgba(220,220,220,0.57)'\r\n    },\r\n    menu: {\r\n        '& > .MuiPopover-paper' : {\r\n            backgroundColor: '#202124',\r\n            color: '#eee',\r\n            boxShadow: '0 1px 2px 0 rgba(0,0,0,0.6), 0 2px 6px 2px rgba(0,0,0,0.302)',\r\n            '& > ul': {\r\n                padding: '4px 0'\r\n            }\r\n        }\r\n    },  \r\n    title: {\r\n        paddingBottom: 0,\r\n        '& .MuiCardHeader-subheader': {\r\n            color: 'rgba(220,220,220,0.57)'\r\n        }\r\n    },\r\n    body: {\r\n        fontSize: '0.975rem',\r\n        whiteSpace: 'pre-line',\r\n        maxHeight: '200px',\r\n        overflowY: 'scroll',\r\n    },\r\n    deletebutton: {\r\n        marginLeft: 'auto',\r\n    },\r\n    popover: {\r\n        background: '#121212',\r\n        borderRadius: 5,\r\n        padding: theme.spacing(2),\r\n        width: 200,\r\n        border: '1px solid #484848'\r\n    },\r\n    colorItem: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '100%',\r\n        width: 28,\r\n        height: 28,\r\n        margin: theme.spacing(1),\r\n        transition: 'border 0.1s ease-in-out',\r\n        '&:hover': {\r\n            border: '2px solid transparent',\r\n            borderColor: 'rgba(255,255,255,0.87)!important'\r\n        }\r\n    }\r\n}));\r\n\r\nconst formatDate = date => {\r\n    let d = date.toDateString().slice(0, -4);\r\n    return `${d.slice(0,3)},${d.slice(3)}`\r\n}\r\n\r\nconst Task = ({ \r\n    title, \r\n    body, \r\n    color, \r\n    id, \r\n    created,\r\n    edited,\r\n    deleteTask,\r\n    setEdit,\r\n    setPrevData,\r\n    handleBackdropToggle,\r\n    editTask,\r\n    onSelectClick,\r\n    isSelected,\r\n    selectedCount,\r\n    markComplete\r\n}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [open, setDialogOpen] = useState(false);\r\n    const [showSelect, setShowSelect] = useState(false);\r\n    const [selected, setSelected] = useState(false);\r\n    const [mounted, setMount] = useState(false);\r\n    const [hold, setHold] = useState({isHolding: false, date: null, timer: null}); \r\n\r\n    const classes = useStyles({isSelected});\r\n\r\n\r\n    useEffect(() => {\r\n        if(!mounted){\r\n            if(isSelected){\r\n                setSelected(true);\r\n                if(!showSelect)\r\n                    setShowSelect(true);\r\n            }\r\n            setMount(true);\r\n        }\r\n    }, [mounted, setMount, isSelected, setSelected, showSelect, setShowSelect])\r\n\r\n    const selectOpen = () => {\r\n        if(!showSelect)\r\n            setShowSelect(true);\r\n    }\r\n\r\n    const selectClose = () => {\r\n        if(showSelect && !isSelected)\r\n            setShowSelect(false);\r\n    }\r\n\r\n    const toggleSelected = () => {\r\n        setSelected(!selected);\r\n        if(!selected){\r\n            onSelectClick(id, true)\r\n        } else {\r\n            onSelectClick(id, false)\r\n        }\r\n    }\r\n\r\n    const handleDialogOpen = (event) => {\r\n        event.stopPropagation();\r\n        setDialogOpen(true);\r\n        handleMenuClose();\r\n    };\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const onDeleteClick = (event) => {\r\n        event.stopPropagation();\r\n        handleDialogClose();\r\n        deleteTask([id, ]);\r\n    }\r\n\r\n    const onEditClick = (event) => {\r\n        event.stopPropagation();\r\n        setEdit(true);\r\n        setAnchorEl(null);\r\n        handleBackdropToggle()\r\n        setPrevData({title, body, task_id: id, color, edited});\r\n        handleDialogClose();\r\n        \r\n    }\r\n\r\n    const onColorClick = (colorCode) => {\r\n        editTask(id, undefined, undefined, undefined, colorCode, true);\r\n    }\r\n\r\n    const onHold = () => {\r\n        toggleSelected();\r\n    }\r\n\r\n    const onMouseDown = () => {\r\n        let timer = setTimeout(onHold, 600);\r\n        setHold({isHolding: true, date: new Date(), timer});\r\n    }\r\n\r\n    const onMouseUp = () => {\r\n        if((new Date() - hold.date) < 600){\r\n            clearTimeout(hold.timer);\r\n        }\r\n        setHold({isHolding: false, date: null, timer: null});\r\n    }\r\n\r\n    const onCardClick = (event) => {\r\n        event.stopPropagation();\r\n        if(selectedCount > 0){\r\n            toggleSelected();\r\n        }\r\n    }\r\n\r\n    const onCompleteClick = (event) => {\r\n        event.stopPropagation();\r\n        markComplete(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                className={`${classes.root} grid-item`}\r\n                onMouseEnter={selectOpen}\r\n                onMouseLeave={selectClose}\r\n            >\r\n                \r\n                {\r\n                    showSelect?\r\n                        <Tooltip title={\"Select\"} arrow>\r\n                            <IconButton \r\n                                aria-label=\"select task\" \r\n                                className={classes.selectButton}\r\n                                disableRipple\r\n                                onClick={toggleSelected}\r\n                            >\r\n                                <CheckCircleIcon/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    :''\r\n                }\r\n                <Card \r\n                    className={`${classes.card} waves-effect waves-light`} \r\n                    variant={\"outlined\"} \r\n                    style={{background: color}}\r\n                    onMouseDown={onMouseDown}\r\n                    onMouseUp={onMouseUp}\r\n                    onTouchStart={onMouseDown}\r\n                    onTouchEnd={onMouseUp}\r\n                    onTouchCancel={onMouseUp}\r\n                    onClick={onCardClick}\r\n                >\r\n                    <CardHeader \r\n                        title={title}\r\n                        className={classes.title}\r\n                        action={\r\n                            <Tooltip title={\"Menu\"} arrow>\r\n                                <IconButton aria-label=\"settings\" onClick={handleMenuClick}>\r\n                                    <MoreVertIcon className={classes.cardIcon}/>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                        subheader={formatDate(new Date(created))}\r\n                    />\r\n                    <Menu\r\n                        id=\"actions-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleMenuClose}\r\n                        className={classes.menu}\r\n                    >\r\n                        <MenuItem onClick={onEditClick}>Edit</MenuItem>\r\n                        <MenuItem onClick={handleDialogOpen}>Delete</MenuItem>\r\n                    </Menu>\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" component=\"p\" className={classes.body}>\r\n                            {body}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions>\r\n                            <ColorPicker \r\n                                onColorClick={onColorClick} \r\n                                currColor={color}\r\n                            />\r\n                        <Tooltip title=\"Mark complete\" arrow>\r\n                            <IconButton\r\n                                aria-label=\"complete\" \r\n                                style={{marginLeft: 'auto'}}\r\n                                onClick={onCompleteClick}\r\n                            >\r\n                                <CheckCircleIcon className={classes.cardIcon}/>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </CardActions>\r\n                </Card>\r\n            </div>\r\n            <MuiDialog\r\n                open={open}\r\n                title=\"Delete task?\"\r\n                content=\"This action cannot be undone!\"\r\n                handleDialogClose={handleDialogClose}\r\n                btn1=\"Cancel\"\r\n                btn2=\"Delete\"\r\n                onMainButtonClick={onDeleteClick}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Task;","import React, { useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {Masonry} from 'masonic';\r\n\r\nimport Task from '../Task/Task';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\nimport MuiDialog from '../MuiDialog/MuiDialog';\r\n\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport SelectAllIcon from '@material-ui/icons/SelectAll';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        top: theme.spacing(-8),\r\n        \"-moz-transition\": \"top 0.1s linear\",\r\n        \"-webkit-transition\": \"top 0.1s linear\",\r\n        transition: \"top 0.1s ease-in\",\r\n        background: '#202124',\r\n        // height: theme.spacing(8)\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    root: {\r\n      background: '#202124',\r\n      maxWidth: '100vw'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    container: {\r\n        background: '#202124',\r\n    },\r\n    tasksTitle: {\r\n        marginTop: '2rem',\r\n        background: theme.palette.primary.dark,\r\n        width: '100%',\r\n        display: 'flex',\r\n        maxHeight: '9vh',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(2)\r\n    },\r\n    noTasksNotice: {\r\n        background: '#202124',\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        minHeight: '250px',\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nconst MasonryComponent = props => (\r\n    <Masonry\r\n        key={Object.keys(props.taskArray).length}\r\n        items={Object.values(props.taskArray).reverse()} \r\n        columnGutter={8}\r\n        {...props}\r\n        columnWidth={240}\r\n        render={({data: el}) => {\r\n            return (<Task \r\n                key={el.task_id}\r\n                title={el.title}\r\n                body={el.body}\r\n                created={el.created}\r\n                edited={el.last_edited}\r\n                id={el.task_id}\r\n                color={el.color}\r\n                deleteTask={props.deleteTask}\r\n                setEdit={props.setEdit}\r\n                setPrevData={props.setPrevData}\r\n                handleBackdropToggle={props.handleBackdropToggle}\r\n                editTask={props.editTask}\r\n                onSelectClick={props.onSelectClick}\r\n                isSelected={Boolean(props.selectedTasks[el.task_id])}\r\n                selectedCount={props.selectedCount}\r\n                markComplete={props.markComplete}\r\n            />)\r\n        }}\r\n        role=\"task container\"\r\n        tabIndex=\"none\"\r\n    />\r\n)\r\n\r\nconst CardList = ({\r\n    showLoading,\r\n    taskArray,\r\n    deleteTask,\r\n    setEdit,\r\n    setPrevData,\r\n    handleBackdropToggle,\r\n    editTask,\r\n    updateMultiple,\r\n    markComplete\r\n}) => {\r\n    const classes = useStyles();\r\n    const [selectedTasks, setSelected] = useState({});\r\n    const [selectAll, setSelectAll] = useState(false);\r\n    const [open, setDialogOpen] = useState(false);\r\n    const [appBarOpen, setAppBar] = useState(false);\r\n\r\n\r\n    const showAppBar = () => {\r\n        setAppBar(true);\r\n    }\r\n\r\n    const hideAppBar = () => {\r\n        setAppBar(false);\r\n    }\r\n\r\n    const onSelectClick = (task_id, val) => {\r\n        if(val){\r\n            setSelected({...selectedTasks, [task_id]: task_id});\r\n            if(Object.keys(selectedTasks).length === 0){\r\n                showAppBar();\r\n                if(Object.keys(taskArray).length === 1){\r\n                    setSelectAll(true);\r\n                }\r\n            } \r\n            \r\n            else if(Object.keys(selectedTasks).length+1 === Object.keys(taskArray).length) {\r\n                setSelectAll(true);\r\n            }\r\n        }\r\n        else {\r\n            let newArr = {...selectedTasks}\r\n            delete newArr[task_id];\r\n            setSelected(newArr);\r\n            if(Object.keys(selectedTasks).length === 1){\r\n                hideAppBar();\r\n                setSelectAll(false);\r\n            } \r\n\r\n            else if(Object.keys(selectedTasks).length <= Object.keys(taskArray).length){\r\n                setSelectAll(false);\r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const onSelectAll = () => {\r\n        if(selectAll){\r\n            setSelected({});\r\n            hideAppBar();\r\n        } else {\r\n            let newObj = {};\r\n            Object.keys(taskArray).forEach(el => {\r\n                newObj[el] = el;\r\n            });\r\n            setSelected(newObj);\r\n        }\r\n        setSelectAll(!selectAll);\r\n    }\r\n\r\n    const onColorClick = (color) => {\r\n        updateMultiple(Object.keys(selectedTasks), {color});\r\n    }\r\n\r\n    const onDeleteClick = () => {\r\n        setDialogOpen(true);\r\n    }\r\n\r\n    const onCloseClick = () => {\r\n        setSelectAll(false);\r\n        setSelected({});\r\n        hideAppBar();\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    }\r\n\r\n    const deleteTasks = () => {\r\n        setDialogOpen(false);\r\n        deleteTask(Object.keys(selectedTasks));\r\n        setSelected({});\r\n        hideAppBar();\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <AppBar className={classes.appBar} style={{top: appBarOpen?0:'-64px'}}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Tooltip title={\"Close\"}>\r\n                        <IconButton onClick={onCloseClick}>\r\n                            <CloseIcon style={{color: '#eee'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title={\"Select all\"} arrow>\r\n                        <IconButton onClick={onSelectAll}>\r\n                            <SelectAllIcon style={{color: selectAll?'#8699ff':'#eee'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                    <ColorPicker \r\n                        style={{marginLeft: 'auto'}} \r\n                        iconColor=\"#eee\" \r\n                        onColorClick={onColorClick}\r\n                    />\r\n                    <Tooltip title={\"Delete selected items\"} arrow>\r\n                        <IconButton onClick={onDeleteClick}>\r\n                            <DeleteOutlineOutlinedIcon style={{color: '#eee'}}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Toolbar>\r\n            </AppBar>\r\n            \r\n            <Typography \r\n                className={classes.tasksTitle}\r\n                variant={\"h4\"}\r\n                gutterBottom\r\n            >\r\n                Active tasks\r\n            </Typography>\r\n            <Container className={classes.root}>\r\n                {\r\n                    (Object.keys(taskArray).length)?\r\n                        <MasonryComponent \r\n                            taskArray={taskArray}\r\n                            setEdit={setEdit}\r\n                            deleteTask={deleteTask}\r\n                            setPrevData={setPrevData}\r\n                            handleBackdropToggle={handleBackdropToggle}\r\n                            editTask={editTask}\r\n                            onSelectClick={onSelectClick}\r\n                            selectedTasks={selectedTasks}\r\n                            selectedCount={Object.keys(selectedTasks).length}\r\n                            markComplete={markComplete}\r\n                        />\r\n                    :\r\n                        <Grid item className={classes.noTasksNotice}>\r\n                            <Typography variant=\"caption\">\r\n                                {\r\n                                    (showLoading)?\r\n                                        <CircularProgress />\r\n                                    :\r\n                                    <>\r\n                                        You don't have any active tasks for today!\r\n                                        <br />\r\n                                        Click the + button to add a task!\r\n                                    </>\r\n                                }\r\n                            </Typography>\r\n                        </Grid>\r\n                }\r\n            </Container>\r\n            <MuiDialog\r\n                open={open}\r\n                title={`Delete ${Object.keys(selectedTasks).length} task(s)?`}\r\n                content=\"This action cannot be undone!\"\r\n                handleDialogClose={handleDialogClose}\r\n                btn1=\"Cancel\"\r\n                btn2=\"Delete\"\r\n                onMainButtonClick={deleteTasks}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default CardList;","import React, { useRef, useState, useEffect } from 'react';\r\nimport ColorPicker from '../ColorPicker/ColorPicker';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardActions from '@material-ui/core/CardActions';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        // textAlign: 'center','\r\n        color: '#e8eaed',\r\n        background: props => props.colorSelected||'#202124',\r\n        borderRadius: '8px',\r\n        borderColor: '#5f6368',\r\n        minWidth: '50vw',\r\n        boxShadow:  '0px 1px 5px 0 rgba(0,0,0,0.6), 0 1px 5px 1px rgba(0,0,0,0.302)',\r\n        '& label.Mui-focused': {\r\n            color: 'green',\r\n        },\r\n    },\r\n    floatingLabelFocusStyle: {\r\n        color: '#aaa !important'\r\n    },\r\n    cardIcon: {\r\n        color: 'rgba(220,220,220,0.57)'\r\n    },\r\n    title: {\r\n        paddingBottom: 0\r\n    },\r\n    titleInput: {\r\n        fontSize: '1.375rem',\r\n        color: props => props.titleError?'#ff3b2d':'#e8eaed',\r\n    },\r\n    body: {\r\n        paddingBottom: theme.spacing(2),\r\n        color: props => props.bodyError?'#ff3b2d':'#e8eaed',\r\n        whiteSpace: 'pre-line',\r\n        '& > textarea': {\r\n            height: '30vh !important',\r\n            overflowY: 'scroll !important',\r\n            \r\n        },\r\n    },\r\n    edited: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        marginRight: theme.spacing(2),\r\n        color: 'rgba(220,220,220,0.57)'\r\n    },\r\n    deletebutton: {\r\n        marginLeft: 'auto',\r\n    }\r\n}));\r\n\r\nconst NewTask = ({ \r\n    handleBackdropToggle, \r\n    createTask,\r\n    editTask,\r\n    edit,\r\n    setEdit,\r\n    prevData,\r\n    setPrevData\r\n}) => {\r\n    const [titleRef, bodyRef] = [useRef(), useRef()];\r\n    const [titleError, setTitleError] = useState(false);\r\n    const [bodyError, setBodyError] = useState(false);\r\n    const [colorSelected, setColor] = useState('#202124');\r\n\r\n    const classes = useStyles({colorSelected, titleError, bodyError});\r\n\r\n    useEffect(() => {\r\n        if(edit){\r\n            setColor(prevData.color);\r\n            titleRef.current.value = prevData.title;\r\n            bodyRef.current.value = prevData.body;\r\n        } else {\r\n            titleRef.current.value = '';\r\n            bodyRef.current.value = '';\r\n        }\r\n    }, [titleRef, bodyRef, edit, prevData]);\r\n\r\n    const handleFinish = () => {\r\n        if(!titleRef.current.value){\r\n            setTitleError(true);\r\n        } else if (!bodyRef.current.value){\r\n            setBodyError(true);\r\n        } else {\r\n            handleBackdropToggle()\r\n            if(!edit){\r\n                createTask(titleRef.current.value, bodyRef.current.value, colorSelected);\r\n            } else {\r\n                editTask(prevData.task_id, titleRef.current.value, bodyRef.current.value, undefined, colorSelected, true);\r\n            }\r\n            titleRef.current.value = \"\";\r\n            bodyRef.current.value = \"\";\r\n        }\r\n        \r\n    }\r\n\r\n    const onTitleChange = (e) => {\r\n        if(titleRef.current.value){\r\n            setTitleError(false);\r\n        }\r\n    }\r\n\r\n    const onBodyChange = () => {\r\n        if(bodyRef.current.value){\r\n            setBodyError(false);\r\n        }\r\n    }\r\n\r\n    const onClose = () => {\r\n        handleBackdropToggle();\r\n        setEdit(false);\r\n        setPrevData({})\r\n        titleRef.current.value = \"\";\r\n        bodyRef.current.value = \"\";\r\n    }\r\n\r\n    const onColorClick = (color) => {\r\n        setColor(color);\r\n    }\r\n\r\n    const getTime = (t) => {\r\n        let date = new Date(t);\r\n        return date.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit', hour12: true});\r\n    }\r\n    \r\n    const title = <InputBase\r\n                    fullWidth\r\n                    required\r\n                    id=\"standard-basic-title\" \r\n                    placeholder=\"Title\" \r\n                    inputRef={titleRef}\r\n                    error={titleError}\r\n                    onChange={onTitleChange}\r\n                    // inputProps={{style: {color: '#e8eaed'}}}\r\n                    className={classes.titleInput}\r\n                />\r\n\r\n    const body = <InputBase\r\n                    inputRef={bodyRef}\r\n                    id=\"outlined-multiline-body\"\r\n                    placeholder=\"Body\"\r\n                    multiline\r\n                    fullWidth\r\n                    error={bodyError}\r\n                    onChange={onBodyChange}\r\n                    className={classes.body}\r\n                />\r\n                \r\n\r\n    return (\r\n        <Card className={classes.card} variant={\"outlined\"}>\r\n            <CardHeader \r\n                title={title}\r\n                className={classes.title}\r\n                action={\r\n                    <Tooltip title={\"Cancel\"} arrow>\r\n                        <IconButton aria-label=\"settings\" onClick={onClose}>\r\n                            <CloseIcon className={classes.cardIcon} />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n            />\r\n            <CardContent className={classes.title}>\r\n                {body}\r\n            </CardContent>\r\n        \r\n            {\r\n                edit?\r\n                <span className={classes.edited}>{`Edited: ${getTime(prevData.edited)}`}\r\n                </span>\r\n                :''\r\n            }\r\n            \r\n            <CardActions>\r\n                <ColorPicker onColorClick={onColorClick} currColor={colorSelected}/>\r\n                <Tooltip title={\"Save\"} arrow>\r\n                    <IconButton aria-label=\"complete\" style={{marginLeft: 'auto'}} onClick={handleFinish}>\r\n                        <CheckCircleIcon className={classes.cardIcon}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewTask;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport CardList from \"../../components/CardList/CardList\";\r\nimport NewTask from '../../components/NewTask/NewTask';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: '#eee'\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        background: '#202124',\r\n        color: '#eee',\r\n        textAlign: 'center',\r\n        height: '20vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // borderRadius: '4px'\r\n    },\r\n    tasksNotice: {\r\n        textAlign: 'center',\r\n        marginTop: '2rem'\r\n    },\r\n    addTaskButton: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            bottom: theme.spacing(3),\r\n            right: theme.spacing(3),\r\n        },\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    }\r\n}));\r\n\r\nconst Home = ({ userData, openAlert, BASE_URL }) => {\r\n    const classes = useStyles();\r\n    const [backdropOpen, setBackdropOpen] = useState(false);\r\n    const [taskArray, setTaskArray] = useState({});\r\n    const [taskNotice, setTaskNotice] = useState(\"You don't have any active tasks\");\r\n    const [taskCount, setTaskCount] = useState(null);\r\n    const [mounted, setMounted] = useState(false);\r\n    const [showLoading, setLoading] = useState(true);\r\n    const [edit, setEdit] = useState(false);\r\n    const [prevData, setPrevData] = useState({});\r\n\r\n    const handleBackdropToggle = () => {\r\n        setBackdropOpen(!backdropOpen);\r\n    };\r\n\r\n    //load user's data\r\n    useEffect(() => {\r\n        if(!mounted){\r\n            fetch(`${BASE_URL}/getTasks`, {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    id: userData.id\r\n                }) \r\n            })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    return response.json();\r\n                } else if(response.status === 404){\r\n                    //user has no tasks\r\n                    setTaskNotice(`You don't have any active tasks!`);\r\n                    setLoading(false);\r\n                } else {\r\n                    console.log(\"something went wrong!\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                if(data){\r\n                    setTaskNotice(`You have ${data.length===0?'no':data.length} active ${data.length===1?'task':'tasks'}!`)\r\n                    let tasks = {};\r\n                    setTaskCount(data.length);\r\n                    data.forEach((el) => {\r\n                        tasks[el.task_id] = {...el};\r\n                    });\r\n                    setLoading(false);\r\n                    setTaskArray(tasks);\r\n                }\r\n                else{\r\n                    \r\n                }\r\n            })\r\n            .catch((err)=>{\r\n                console.log(err);\r\n            });\r\n\r\n            setMounted(true);\r\n        }\r\n    }, [mounted, userData.id, setTaskNotice, setTaskCount, setLoading, BASE_URL]);\r\n    \r\n    const createTask = (title, body, color='#202124') => {\r\n        fetch(`${BASE_URL}/createTask`, {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                id: userData.id,\r\n                title,\r\n                body,\r\n                color\r\n            }) \r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                return response.json();\r\n            } else {\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        }) \r\n        .then(data => {\r\n            if(data){\r\n                const {task_id, created} = data;\r\n                setEdit(false);\r\n                handleBackdropToggle();\r\n                let newArray = taskArray;\r\n                newArray[task_id] = {\r\n                    title, body, created, task_id, last_edited:created, color\r\n                }\r\n                setTaskArray(newArray);\r\n                setTaskNotice(`You have ${taskCount+1} active ${taskCount+1===1?'task':'tasks'}!`);\r\n                // openAlert(\"Created a new task successfully!\", \"success\");\r\n                setTaskCount(taskCount+1);\r\n            }\r\n            else{\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .catch(()=>{\r\n            openAlert(\"Something went wrong!\", \"error\");\r\n        });\r\n    }\r\n\r\n    const editTask = (task_id, title, body, status, color, blockNotice) => {\r\n        fetch(`${BASE_URL}/updateTask`, {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                task_id,\r\n                title,\r\n                body,\r\n                status,\r\n                color\r\n            }) \r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                return response.json();\r\n            } else {\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            if(data){\r\n                let newArray = {...taskArray};\r\n                newArray[task_id] = {\r\n                    ...data[0]\r\n                }\r\n                setTaskArray(newArray);\r\n                setEdit(false);\r\n                if(!blockNotice)\r\n                    openAlert(\"Edited task successfully!\", \"success\");\r\n            }\r\n            else{\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .catch(()=>{\r\n            openAlert(\"Something went wrong!\", \"error\");\r\n        });\r\n    }\r\n\r\n    const deleteTask = (task_ids) => {\r\n        fetch(`${BASE_URL}/deleteTasks`, {\r\n            method: 'delete',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                task_ids: task_ids\r\n            }) \r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                return response.json();\r\n            } else {\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            let newArray = {...taskArray};\r\n\r\n            task_ids.forEach(el => {\r\n                delete newArray[el];\r\n            })\r\n            \r\n            setTaskArray(newArray);\r\n            const newCount = taskCount-data;\r\n            (taskCount-1 === 0)?\r\n                setTaskNotice(`You don't have any active tasks!`)\r\n            :    setTaskNotice(`You have ${newCount} active ${newCount===1?'task':'tasks'}!`)\r\n            \r\n            setTaskCount(newCount);\r\n            openAlert(`Deleted ${data} task(s)`, \"warning\");\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            openAlert(\"Something went wrong!\", \"error\");\r\n        })\r\n    }\r\n\r\n    const updateMultiple = (task_ids, newValues) => {\r\n        fetch(`${BASE_URL}/updateMultiple`, {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ task_ids, ...newValues }) \r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                return response.json();\r\n            } else {\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            if(data.length){\r\n                let newArray = {...taskArray};\r\n                data.forEach(el => {\r\n                    newArray[el.task_id] = el;\r\n                });\r\n                setTaskArray(newArray);\r\n            }\r\n            else{\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .catch(()=>{\r\n            openAlert(\"Something went wrong!\", \"error\");\r\n        });\r\n    }\r\n\r\n    const markComplete = (task_id) => {\r\n        fetch(`${BASE_URL}/markCompleted`, {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ task_id }) \r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                return response.json();\r\n            } else {\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .then(data => {\r\n            let newArray = {...taskArray};\r\n            delete newArray[task_id];\r\n            \r\n            setTaskArray(newArray);\r\n            const newCount = taskCount-1;\r\n            (newCount === 0)?\r\n                setTaskNotice(`You don't have any active tasks!`)\r\n            :    setTaskNotice(`You have ${newCount} active ${newCount===1?'task':'tasks'}!`)\r\n            openAlert(\"Marked as complete!\", \"success\");\r\n            setTaskCount(newCount);\r\n        })\r\n        .catch(()=>{\r\n            openAlert(\"Something went wrong!\", \"error\");\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container className={classes.container} maxWidth={\"sm\"}>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h3\" >\r\n                        <code>\r\n                            {`Welcome, ${userData.name}!`}\r\n                        </code>\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Container>\r\n            <Container \r\n                className={classes.tasksNotice}\r\n            >\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h5\" >\r\n                        {taskNotice}\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Container>\r\n            <CardList \r\n                showLoading={showLoading}\r\n                taskArray={taskArray}\r\n                handleBackdropToggle={handleBackdropToggle} \r\n                createTask={createTask} \r\n                editTask={editTask}\r\n                setEdit={setEdit}\r\n                deleteTask={deleteTask}\r\n                setPrevData={setPrevData}\r\n                updateMultiple={updateMultiple}\r\n                markComplete={markComplete}\r\n            />\r\n            <Tooltip title=\"Create task\" arrow>\r\n                <Fab \r\n                    color=\"secondary\" \r\n                    aria-label=\"add\" \r\n                    className={classes.addTaskButton}\r\n                    onClick={handleBackdropToggle}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </Tooltip>\r\n            \r\n            <Backdrop \r\n                className={classes.backdrop} \r\n                open={backdropOpen}\r\n            >\r\n                <NewTask \r\n                    handleBackdropToggle={handleBackdropToggle} \r\n                    createTask={createTask} \r\n                    edit={edit}\r\n                    editTask={editTask}\r\n                    prevData={prevData}\r\n                    setEdit={setEdit}\r\n                    setPrevData={setPrevData}\r\n                />\r\n            </Backdrop>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Chart } from 'react-charts'\r\n\r\nconst formatDate = date => {\r\n    let d = date.toDateString().slice(0, -4);\r\n    return `${d.slice(0,3)},${d.slice(3)}`\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: '#eee',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        background: '#202124',\r\n        color: '#eee',\r\n        textAlign: 'center',\r\n        height: '20vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // borderRadius: '4px'\r\n    },\r\n    chartContainer: {\r\n        marginTop: '3rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        overflow: 'hidden'\r\n    },\r\n    chart: {\r\n        width: '100%',\r\n        height: '60vmin'\r\n    },\r\n    info: {\r\n        marginTop: '3rem',\r\n    },\r\n    list: {\r\n        fontSize: '1rem',\r\n        '&>li': {\r\n            marginTop: '0.5rem'\r\n        }\r\n    }\r\n}));\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst Analyze = ({ userData, openAlert, BASE_URL }) => {\r\n    const classes = useStyles();\r\n    const [mounted, setMounted] = useState(false);\r\n    const [dataLoaded, setDataLoaded] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    const chartData = React.useMemo(() => [\r\n            {\r\n                label: 'Abandoned',\r\n                data: data.abandoned\r\n            },\r\n            {\r\n                label: 'Completed',\r\n                data: data.completed\r\n            }\r\n        ], [data]\r\n    )\r\n    \r\n    const axes = React.useMemo(() => [\r\n            { primary: true, type: 'ordinal', position: 'bottom' },\r\n            { type: 'linear', position: 'left' }\r\n        ], []\r\n    )\r\n\r\n\r\n    useEffect(() => {\r\n        if(!mounted){\r\n            fetch(`${BASE_URL}/getHistory`, {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    id: userData.id,\r\n                    orderAsc: true\r\n                })\r\n            })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    return response.json();\r\n                } else if(response.status === 404){\r\n                    setDataLoaded(true);\r\n                } else {\r\n                    console.log(\"something went wrong!\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                if(data !== undefined){\r\n                    const newSortedTasks = {};\r\n                    const aban = {}\r\n                    const comp = {}\r\n                    const newChartData ={\r\n                        abandoned: [],\r\n                        completed: []\r\n                    }\r\n                    data.forEach(el => {\r\n                        const niceDate = formatDate(new Date(el.created))\r\n                        \r\n                        if(newSortedTasks[niceDate]){\r\n                            newSortedTasks[niceDate].push(el);\r\n                        } else {\r\n                            newSortedTasks[niceDate] = [el, ];\r\n                        }\r\n                    });\r\n                    Object.keys(newSortedTasks).forEach(el => {\r\n                        newSortedTasks[el].forEach(task => {\r\n                            if(task.status === 'completed'){\r\n                                if(comp[el]){\r\n                                    comp[el]++;\r\n                                } else {\r\n                                    comp[el] = 1;\r\n                                    aban[el] = 0;\r\n                                }\r\n                            } else if(task.status === 'abandoned'){\r\n                                \r\n                                if(aban[el] !== undefined){\r\n                                    aban[el] += 1;\r\n                                } else {\r\n                                    aban[el] = 1;\r\n                                    comp[el] = 0;\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                    Object.keys(aban).forEach(el => {\r\n                        newChartData.abandoned.push([el, aban[el]]);\r\n                        newChartData.completed.push([el, comp[el]]);\r\n                    })\r\n\r\n                    setData(newChartData);\r\n                    setDataLoaded(true);\r\n                } \r\n            })\r\n            .catch((err) => console.log(\"error\", err))\r\n            \r\n            setMounted(true);\r\n        }\r\n    }, [mounted, setMounted, userData, BASE_URL]);\r\n    \r\n     \r\n    return (\r\n        <div className={classes.root}>\r\n            <Container \r\n                className={classes.container}\r\n                maxWidth={\"sm\"}\r\n            >\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h3\">\r\n                        <code>\r\n                            {`Analyze`}\r\n                        </code>\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Container>\r\n            <Container className={classes.info}>\r\n                {/* <Typography variant={\"body1\"}> */}\r\n                <ul className={classes.list}>\r\n                    <li>{\"Your completed graph should increase \\\r\n                    while the abandoned graph should decrease.\"}</li>\r\n                    <li>{\"This graph can show data of maximum 7 days.\"}</li>\r\n                    <li>{\"If you delete a task from history, it will not be visible here!\"}</li>\r\n                </ul>\r\n                {/* </Typography> */}\r\n            </Container>\r\n            <Container \r\n                maxWidth={\"sm\"}\r\n                className={classes.chartContainer}\r\n            >\r\n                {\r\n                    dataLoaded?\r\n                        (data.abandoned === undefined)? \r\n                            \"You don't have enough tasks to make a graph!\"\r\n                            :\r\n                                <div className={classes.chart}>\r\n                                    <Chart data={chartData} axes={axes} tooltip dark/>\r\n                                </div>\r\n                    :\r\n                        <CircularProgress />\r\n                }\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Analyze;","import React, { useState } from \"react\";\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        color: '#e8eaed',\r\n        borderColor: '#5f6368',\r\n        backgroundColor: props => props.status==='completed'?'rgb(30, 58, 95)':'rgb(60, 63, 67)',\r\n        borderRadius: '3px',\r\n        transition: 'outline 0.1s ease-out',\r\n        fontWeight: 400,\r\n        boxSizing: 'border-box !important',\r\n        userSelect: 'none',\r\n    },\r\n    whiteIcon: {\r\n        color: 'rgba(220,220,220,0.57)'\r\n    },\r\n    menu: {\r\n        '& > .MuiPopover-paper' : {\r\n            backgroundColor: '#202124',\r\n            color: '#eee',\r\n            boxShadow: '0 1px 2px 0 rgba(0,0,0,0.6), 0 2px 6px 2px rgba(0,0,0,0.302)',\r\n            '& > ul': {\r\n                padding: '4px 0'\r\n            }\r\n        }\r\n    },\r\n}));\r\n\r\nconst OldTask = ({\r\n    taskId,\r\n    title,\r\n    body,\r\n    status,\r\n    deleteTask,\r\n    accordionTitle\r\n}) => {\r\n    const classes = useStyles({status});\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleMenuClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n        event.stopPropagation();\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const onDeleteClick = (event) => {\r\n        event.stopPropagation();\r\n        handleMenuClose();\r\n        deleteTask([taskId, ], accordionTitle);\r\n    }\r\n\r\n\r\n    return (\r\n        <Card \r\n            className={classes.card}\r\n            variant={\"outlined\"}\r\n            \r\n        >\r\n            <CardHeader \r\n                title={title}\r\n                action={\r\n                    <Tooltip title={\"Menu\"} arrow>\r\n                        <IconButton aria-label=\"settings\" onClick={handleMenuClick}>\r\n                            <MoreVertIcon className={classes.whiteIcon}/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n            />\r\n            <Menu\r\n                id=\"actions-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n                className={classes.menu}\r\n            >\r\n                <MenuItem onClick={onDeleteClick}>Delete from history</MenuItem>\r\n            </Menu>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {body}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default OldTask;","import React, { useState, useEffect } from \"react\";\r\nimport OldTask from '../../components/OldTask/OldTask'\r\n\r\nimport { makeStyles, createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        color: '#eee',\r\n        minHeight: '85vh',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        position: 'relative',\r\n        background: '#202124',\r\n        color: '#eee',\r\n        textAlign: 'center',\r\n        height: '20vh',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    tasksNotice: {\r\n        textAlign: 'center',\r\n        fontStyle: 'italic',\r\n        marginTop: 'auto',\r\n        marginBottom: '2rem'\r\n    },\r\n    accordionContainer: {\r\n        marginTop: '2rem'\r\n    },\r\n    accordion: {\r\n        '&.MuiAccordion-root': {\r\n            backgroundColor: '#202124',\r\n            color: '#e8eaed',\r\n        },\r\n        '&>.MuiCollapse-container': {\r\n            minHeight: 0\r\n        }\r\n    },\r\n    accordionSummary: {\r\n        minHeight: 0,\r\n    },\r\n    taskContainer: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fill, minmax(240px, 1fr))',\r\n        gap: theme.spacing(1),\r\n        gridGap: theme.spacing(1),\r\n    },\r\n    whiteIcon: {\r\n        color: 'rgba(220,220,220,0.57)'\r\n    },\r\n    helpIcon: {\r\n        position: 'absolute',\r\n        top: theme.spacing(1),\r\n        right: theme.spacing(1)\r\n    },\r\n    popover: {\r\n        pointerEvents: 'none',\r\n        alignContent: 'center',\r\n        display: 'flex'\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        \r\n    },\r\n    abandonedColor: {\r\n        color: 'rgb(60, 63, 67)'\r\n    },\r\n    completedColor: {\r\n        color: 'rgb(30, 58, 95)'\r\n    }\r\n}));\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nconst MuiAccordion = ({ \r\n    id, \r\n    title, \r\n    children,\r\n    classes,\r\n    handleChange,\r\n    expanded,\r\n}) => {\r\n    return (\r\n        <Accordion \r\n            className={classes.accordion}\r\n            onChange={handleChange(id)}\r\n            expanded={expanded === id}\r\n            square\r\n        >\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon className={classes.whiteIcon}/>}\r\n                aria-controls={`panel${id}-content`}\r\n                id={id}\r\n                className={classes.accordionSummary}\r\n            >\r\n                <Typography className={classes.heading}>\r\n                    {title}\r\n                </Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={classes.taskContainer}>\r\n                {children}\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nconst formatDate = date => {\r\n    let d = date.toDateString().slice(0, -4);\r\n    return `${d.slice(0,3)},${d.slice(3)}`\r\n}\r\n\r\nconst History = ({ userData, openAlert, BASE_URL }) => {\r\n    const classes = useStyles();\r\n    const [mounted, setMounted] = useState(false);\r\n    const [sortedTasks, setSortedTasks] = useState({});\r\n    const [expanded, setExpanded] = useState(0);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const handlePopoverOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n\r\n    useEffect(() => {\r\n        if(!mounted){\r\n            fetch(`${BASE_URL}/getHistory`, {\r\n                method: 'post',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({\r\n                    id: userData.id\r\n                })\r\n            })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    return response.json();\r\n                } else if(response.status === 404){\r\n                    setLoaded(true);\r\n                } else {\r\n                    console.log(\"something went wrong!\");\r\n                }\r\n            })\r\n            .then(data => {\r\n                if(data !== undefined){\r\n                    const newSortedTasks = {};\r\n                    data.forEach(el => {\r\n                        const niceDate = formatDate(new Date(el.created))\r\n                        \r\n                        if(newSortedTasks[niceDate]){\r\n                            newSortedTasks[niceDate].push(el);\r\n                        } else {\r\n                            newSortedTasks[niceDate] = [el, ];\r\n                        }\r\n                    });\r\n                    setLoaded(true);\r\n                    setSortedTasks(newSortedTasks);\r\n                }\r\n            })\r\n            .catch((err) => console.log(\"error\", err))\r\n\r\n            setMounted(true);\r\n        }\r\n    }, [mounted, setMounted, setSortedTasks, userData, BASE_URL]);\r\n    \r\n    const handleChange = (id) => (event, isExpanded) => {\r\n        setExpanded(isExpanded?id:false);\r\n    }\r\n\r\n    const deleteTask = (task_ids, accordionTitle) => {\r\n        fetch(`${BASE_URL}/deleteTasks`, {\r\n            method: 'delete',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                task_ids: task_ids\r\n            }) \r\n        })\r\n        .then(response => {\r\n            if(response.status === 200){\r\n                return response.json();\r\n            } else {\r\n                openAlert(\"Something went wrong!\", \"error\");\r\n            }\r\n        })\r\n        .then(() => {\r\n            const newSortedArr = {...sortedTasks};\r\n            newSortedArr[accordionTitle] = newSortedArr[accordionTitle].filter(el => el.task_id !== task_ids[0])\r\n            if(newSortedArr[accordionTitle].length === 0){\r\n                delete newSortedArr[accordionTitle];\r\n            }\r\n            console.log(newSortedArr)\r\n            setSortedTasks(newSortedArr);\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            openAlert(\"Something went wrong!\", \"error\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Container \r\n                className={classes.container}\r\n                maxWidth={\"sm\"}\r\n            >\r\n                <HelpOutlineIcon \r\n                    className={classes.helpIcon}\r\n                    onMouseEnter={handlePopoverOpen}\r\n                    onMouseLeave={handlePopoverClose}\r\n                />\r\n                <Popover\r\n                    id=\"mouse-over-popover\"\r\n                    className={classes.popover}\r\n                    classes={{\r\n                        paper: classes.paper,\r\n                    }}\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    onClose={handlePopoverClose}\r\n                    disableRestoreFocus\r\n                >\r\n                    <div>\r\n                        <div>\r\n                            <StopIcon className={classes.abandonedColor} />Abandoned\r\n                        </div>\r\n                        <div>\r\n                            <StopIcon className={classes.completedColor} />Completed\r\n                        </div>\r\n                    </div>\r\n                </Popover>\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"h3\">\r\n                        <code>\r\n                            {`History`}\r\n                        </code>\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Container>\r\n            \r\n            <Container className={classes.accordionContainer}>\r\n                {\r\n                    Object.keys(sortedTasks).length?\r\n\r\n                        Object.keys(sortedTasks).map((el, i) => {\r\n                            return (\r\n                                <MuiAccordion \r\n                                    id={i} \r\n                                    key={i}\r\n                                    title={el}\r\n                                    classes={classes}\r\n                                    expanded={expanded}\r\n                                    handleChange={handleChange}\r\n                                >\r\n                                    {\r\n                                        sortedTasks[el].map((task, ind) => {\r\n                                            return (\r\n                                                <OldTask \r\n                                                    key={ind}\r\n                                                    taskId={task.task_id}\r\n                                                    title={task.title}\r\n                                                    body={task.body}\r\n                                                    status={task.status}\r\n                                                    deleteTask={deleteTask}\r\n                                                    accordionTitle={el}\r\n                                                />\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </MuiAccordion>\r\n                            )\r\n                        })\r\n                    :\r\n                        <div style={{textAlign: 'center'}}>\r\n                            {\r\n                                loaded? \r\n                                    \"History is empty!\"\r\n                                :\r\n                                    <CircularProgress />\r\n                            }\r\n                            \r\n                        </div>\r\n                }\r\n            </Container>\r\n            <Container \r\n                className={classes.tasksNotice}\r\n            >\r\n                <ThemeProvider theme={theme}>\r\n                    <Typography variant=\"caption\" >\r\n                        {\"Tasks older than 7 days are deleted!\"}\r\n                    </Typography>\r\n                </ThemeProvider>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default History;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport MuiLink from '@material-ui/core/Link';\r\n\r\nimport WbIncandescentOutlinedIcon from '@material-ui/icons/WbIncandescentOutlined';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport AssessmentOutlinedIcon from '@material-ui/icons/AssessmentOutlined';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n    //   width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      \r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: '#202124',\r\n    color: '#e8eaed',\r\n  },\r\n  list: {\r\n    '&>.Mui-selected': {\r\n      backgroundColor: '#41331c',\r\n      \r\n      '&:hover': {\r\n        backgroundColor: '#41331c',\r\n      }\r\n    },\r\n    '&>.MuiListItem-root': {\r\n      color: '#e8eaed',\r\n      borderTopRightRadius: '25px',\r\n      borderBottomRightRadius: '25px',\r\n      '&:hover': {\r\n        backgroundColor: '#28292c'\r\n      }\r\n    }\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    background: '#121212',\r\n    padding: theme.spacing(3)\r\n  },\r\n  icon: {\r\n    color: '#e8eaed'\r\n  },\r\n  copyright: {\r\n    textAlign: 'center',\r\n    marginTop: 'auto',\r\n    marginBottom: '1rem',\r\n    color: '#9aa0a6'\r\n  },\r\n  link: {\r\n    cursor: 'pointer',\r\n    textDecoration: 'underline'\r\n  }\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n  const { window, path, onLogout } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      <Divider />\r\n      <List className={classes.list}>\r\n          <ListItem \r\n            selected={path==='/'} \r\n            component={Link} \r\n            to='/'\r\n            onClick={handleDrawerToggle}\r\n          >\r\n            <ListItemIcon>\r\n              <WbIncandescentOutlinedIcon className={classes.icon}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Active Tasks\"} />\r\n          </ListItem>\r\n          <ListItem \r\n            selected={path==='/history'} \r\n            component={Link} \r\n            to='/history'\r\n            onClick={handleDrawerToggle}\r\n          >\r\n            <ListItemIcon>\r\n              <HistoryIcon className={classes.icon}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"History\"} />\r\n          </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List className={classes.list}>\r\n        <ListItem \r\n          selected={path==='/analyze'}\r\n          component={Link} \r\n          to='/analyze'\r\n          onClick={handleDrawerToggle}\r\n        >\r\n          <ListItemIcon>\r\n            <AssessmentOutlinedIcon className={classes.icon}/>\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Analyze\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            {\"Track Your Day\"}\r\n          </Typography>\r\n          <Tooltip title={\"Logout\"} arrow>\r\n            <IconButton style={{marginLeft: 'auto'}} onClick={onLogout}>\r\n              <ExitToAppIcon style={{color: '#eee'}}/>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"nav drawer\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n          <Drawer\r\n            container={container}\r\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n            <Typography variant={\"caption\"} className={classes.copyright}>\r\n              {\"Make with ❤️ by \"} \r\n              <MuiLink \r\n                className={classes.link} \r\n                color=\"inherit\"\r\n                href={\"https://yashkandalkar.github.io\"}\r\n                target={\"_blank\"}\r\n                rel={\"noopener\"}\r\n              > \r\n                Yash Kandalkar\r\n              </MuiLink> \r\n            </Typography>\r\n          </Drawer>\r\n        \r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginScreen from './pages/LoginScreen/LoginScreen';\nimport Home from \"./pages/Home/Home\";\nimport Analyze from \"./pages/Analyze/Analyze\";\nimport History from \"./pages/History/History\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Grow from '@material-ui/core/Grow';\nimport ResponsiveDrawer from './components/ResponsiveDrawer/ResponsiveDrawer';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BASE_URL = \"https://track-your-day.herokuapp.com\";\n\nconst initialState = {\n  name: '',\n  id: ''\n}\n\nconst useStyles = makeStyles((theme) => ({\n  snackbar: {\n    [theme.breakpoints.down('sm')]: {\n      bottom: 80,\n    },\n  },\n}));\n\nconst GrowTransition = (props) => {\n  return <Grow {...props} />;\n}\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nlet snackbarTimeout;\n  \nfunction App() {\n  const [mounted, setMounted] = useState(false)\n  const [loggedIn, setLogin] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [alertMsg, setAlertMsg] = useState(\"\");\n  const [alertSeverity, setAlertSeverity] = useState(\"success\");\n  const [userData, setUserData] = useState(initialState);\n  const [checkedRemember, setCheckedRemember] = useState(false);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    if(!mounted){\n      const remember = localStorage.getItem('remember') === 'true';\n      if(remember){\n        const name = localStorage.getItem('name'); \n        const id = localStorage.getItem('id');\n        const joined = localStorage.getItem('joined');\n        setUserData({name, id, joined});\n        setLogin(true);\n      }\n      setCheckedRemember(true);\n      setMounted(true);\n    }\n  }, [mounted, setMounted, setCheckedRemember])\n\n  const openAlert = (msg, severity) => {\n    if(open){\n      setOpen(false);\n      if(snackbarTimeout === 0){\n        snackbarTimeout = setTimeout(() => {\n          setAlertMsg(msg);\n          setOpen(true);\n          setAlertSeverity(severity);\n        }, 1000);\n      } else {\n\n      }\n    }\n    setAlertMsg(msg);\n    setOpen(true);\n    setAlertSeverity(severity);\n  }\n\n  const alertClose = (event, reason) => {\n      if (reason === 'clickaway') {\n          return;\n      }\n      setOpen(false);\n  }\n\n  const onLogout = () => {\n    localStorage.setItem('remember', 'false');\n    setLogin(false);\n  }\n\n  return (\n    <div className='App'>\n      <Router basename={\"/track-your-day\"}>\n        <Switch>\n          <Route exact path='/'>\n            {\n              (checkedRemember & loggedIn)?\n                <ResponsiveDrawer path={'/'} onLogout={onLogout}>\n                  <Home userData={userData} openAlert={openAlert} BASE_URL={BASE_URL}/>\n                </ResponsiveDrawer>\n              :\n                <LoginScreen \n                  setLogin={setLogin} \n                  openAlert={openAlert} \n                  setUserData={setUserData}\n                  BASE_URL={BASE_URL}\n                />\n            }\n          </Route>\n          <Route exact path='/analyze'>\n            {\n              (checkedRemember & loggedIn)?\n              <ResponsiveDrawer path='/analyze' onLogout={onLogout}>\n                <Analyze userData={userData} BASE_URL={BASE_URL}/>\n              </ResponsiveDrawer>\n              :\n                <LoginScreen \n                  setLogin={setLogin} \n                  openAlert={openAlert} \n                  setUserData={setUserData}\n                  BASE_URL={BASE_URL}\n                />\n            }\n          </Route>\n          <Route exact path='/history'>\n            {\n              (checkedRemember & loggedIn)?\n              <ResponsiveDrawer path='/history' onLogout={onLogout}>\n                <History userData={userData} openAlert={openAlert} BASE_URL={BASE_URL}/>\n              </ResponsiveDrawer>\n              :\n                <LoginScreen \n                  setLogin={setLogin} \n                  openAlert={openAlert} \n                  setUserData={setUserData}\n                  BASE_URL={BASE_URL}\n                />\n            }\n          </Route>\n        </Switch>\n      </Router>\n      <Snackbar \n        open={open} \n        autoHideDuration={3500} \n        onClose={alertClose}\n        TransitionComponent={GrowTransition}\n        key={GrowTransition.name}\n        className={classes.snackbar}\n      >\n        <Alert onClose={alertClose} severity={alertSeverity}>\n          {alertMsg}\n        </Alert>\n      </Snackbar>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}